
1
down vote
Implicit waits are used to provide a default waiting time between each consecutive test step/command across the entire test script. Thus, subsequent test step would only execute when the specified amount of time have elapsed after executing the previous test step/command.

Explicit waits are used to halt the execution till the time a particular condition is met or the maximum time has elapsed. Unlike Implicit waits, Explicit waits are applied for a particular instance only.


Try HTMLUnit driver using remote driver  in seleniuk c#

*******************************
http://nunit.org/docs/2.5/testFixture.html - Textfixure attribute makes that class contains test,teardown & setup
To run the tests parallel in Nunit 3.7

- Goto propertuies->assemblyinfo.cs file
update the belwo details there

[assembly: Parallelizable(ParallelScope.Fixtures)]
[assembly: LevelOfParallelism(6)]
then save the file

Goto class & then add the attribute [TestFixture] & {parralel]

Eg:
 [TestFixture]
    [Parallelizable]
    public class Dasd
    {
        private IWebDriver driver;
        private StringBuilder verificationErrors;
        private string baseURL;
        private bool acceptNextAlert = true;

        [SetUp]
        
        
        
 Then build the tests then click on Runall option - this will open teh browser based on value of LevelOfParallelism(6)
 here 6 browser will be opened
 
 Or select the individual testss & then run the tests
 
 
 or group the tests based on Class then select each of the class ,clcik run the selected tests
 
 ****Can't run the same fixture in parallel*******
 
 
